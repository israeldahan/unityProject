services:
  customer-api:
    container_name: customer-api
    image: israeldahan/customer-api:0.0.1
    build:
      context: ./customer-api
      dockerfile: Dockerfile
    volumes:
      - ./customer-api/config/default-docker.yaml:/app/config/default.yaml
    ports:
      - 8082:3000
    environment:
      MONGO_USERNAME: root
      MONGO_PASSWORD: example
      MONGO_DATABASE: customers
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      KAFKA_BROKERS: 'broker-1:19092,broker-2:19092,broker-3:19092'
      KAFKA_TOPICS_CUSTOMER_CREATED: customer-created
      KAFKA_TOPICS_CUSTOMER_GET_BY_ID: customer-get-by-id
      KAFKA_TOPICS_CUSTOMERS_GET: customer-get
      KAFKA_TOPICS_DATA_SAVED: data-saved

  customer-worker:
    container_name: customer-worker
    image: israeldahan/customer-worker:0.0.2
    build: 
      context: ./customer-worker
      dockerfile: Dockerfile
    volumes:
      - ./customer-worker/config/default-docker.yaml:/app/config/default.yaml

  ws-app:
    container_name: ws-app
    image: israeldahan/ws-app:0.0.1
    build:
      context: ./ws-app
      dockerfile: Dockerfile
    volumes:
      - ./ws-app/config/default-docker.yaml:/app/config/default.yaml
    ports:
      - 8085:8085

  customer-app:
    container_name: customer-app
    image: israeldahan/customer-app:0.0.5
    build:
      context: ./customer-app
      dockerfile: Dockerfile
    ports:
      - 8083:80
    environment:
      WS_HOST: ws-app
      WS_PORT: 8085

  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MIN_INSYNC_REPLICAS: 2

  controller-2:
    image: apache/kafka:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MIN_INSYNC_REPLICAS: 2

  controller-3:
    image: apache/kafka:latest
    container_name: controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MIN_INSYNC_REPLICAS: 2

  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  broker-2:
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  broker-3:
    image: apache/kafka:latest
    container_name: broker-3
    ports:
      - 49092:9092
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:19092,PLAINTEXT_HOST://localhost:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      # KAFKA_CLUSTERS_0_NAME: kafkacluster0
      # KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker-1:29092,broker-1:9092'
      # KAFKA_CLUSTERS_1_NAME: kafkacluster1
      # KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: 'broker-2:39092,broker-2:9092'
      # KAFKA_CLUSTERS_2_NAME: kafkacluster2
      # KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: 'broker-3:49092,broker-3:9092'

    volumes:
      - ./kui/config.yml:/etc/kafkaui/dynamic_config.yaml

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
